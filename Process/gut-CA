---
library(memisc)
library(dplyr)
library(magrittr)
library(wesanderson)
library(compareGroups)
library(ggplot2)
library(ggstatsplot)
library(patchwork)
library(ggthemes)
library(haven)
library(reshape2)
library(ggsignif)
library(gtools)

data0 = analyze_secondtime <- read_sav("C:/Users/Meripet/Desktop/analyze_secondtime.sav") #读取数据
data <- data0[1:126,10:82] #选取分析的毒素
data[is.na(data)]<-0 #缺失值处理
data$outcome<-factor(data$outcome,levels=c("1","2"),label=c("存活","死亡"))

IS<-c("IS0h","IS4h","IS8h","IS12h","IS24h","IS48h","IS72h","IS1w")
IS<-combinations(8, 2, IS[1:8], set=TRUE, repeats.allowed=FALSE)
my_list <- list()     
my_index <- list()

function1<-function(x){for (i in 1:nrow(x)){
  tmp = paste0("vector",i)
  tmp<-assign(tmp,x[i,])
  the_vector<-data[,tmp]
  the_vector1<-pull(the_vector,1)
  the_vector2<-pull(the_vector,2)
  dataMax<-data %>% mutate(maxIS=pmax(the_vector1,the_vector2),na.rm=TRUE)
  dataMax$maxIS<-as.numeric(dataMax$maxIS)
  wilcox<-wilcox.test(maxIS~outcome,dataMax)
  my_list[[i]]<-wilcox[[3]]
  my_index[[i]]<-tmp
  i=i+1}
  result<- data.frame(matrix(unlist(my_list), nrow=28, byrow=T),stringsAsFactors=FALSE)
  IS_index<-data.frame(matrix(unlist(my_index), nrow=28, byrow=T),stringsAsFactors=FALSE)
  result<-cbind(result, IS_index)
  return(result)
  }

function2<-function(x){ggbetweenstats(
    data = x,  # 数据集 
    x = outcome, # 分组变量 
    y = maxVariable,  # 目标变量 
    type = 'np', # p是参数检验，np是非参数检验 
    plot.type = 'boxviolin', # 还可以是，violin小提琴图，boxviolin二者叠加 
    xlab = '预后分组', 
    ylab = '不同预后IS水平', 
    pairwise.display = 'all', #显示组间比较有差异的，ns是显示没有差异的 
    pairwise.comparisons = TRUE, # display results from pairwise comparisons
    pairwise.annotation = "p.value", # annotate the pairwise comparisons using p-values
    p.adjust.method = 'bonferroni', #组间两两比较的p值校正的方法，如bonferroni 
    ggtheme = ggthemes::theme_fivethirtyeight(),
    ggstatsplot.layer = FALSE, # turn off `ggstatsplot` theme layer
    package = "wesanderson", # package from which color palette is to be taken
    palette = "Darjeeling1") # choosing a different color palette
}


pic1= pic1+geom_signif(comparisons = list(c("存活", "死亡")), annotation = '*p=0.01864') +
    theme(axis.title.x = element_text(family = "TNM", face = "bold", size = 18), axis.title.y = element_text(family = "TNM", face = "bold", size = 18)) 
    
